{"version":3,"sources":["utilities/RimbleWeb3.js","components/Header.js","utilities/content/TransactionToastMessages.js","utilities/TransactionToastUtil.js","components/ConnectButton.js","components/SmartContractControls.js","components/TransactionsCard.js","components/PrimaryCard.js","components/InstructionsCard.js","components/MissingWeb3Provider.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["RimbleTransactionContext","React","createContext","contract","account","web3","transactions","initWeb3","initContract","initAccount","RimbleTransaction","_callee","regenerator_default","a","wrap","_context","prev","next","window","ethereum","console","log","Web3","currentProvider","_this","setState","stop","this","_callee2","address","abi","_context2","state","eth","Contract","sent","t0","toastProvider","addMessage","variant","_callee3","_context3","enable","then","wallets","contractMethodSendWrapper","contractMethod","transaction","createTransaction","addTransaction","method","type","status","updateTransaction","_this$state","methods","send","from","on","hash","transactionHash","recentEvent","confirmationNumber","receipt","confirmationCount","error","secondaryMessage","actionHref","actionText","created","Date","now","lastUpdated","Object","objectSpread","concat","updatedTransaction","react_default","createElement","Provider","assign","value","props","Component","Consumer","Header","index_es","bg","p","justifyContent","flexDirection","href","target","width","mx","h2","color","TransactionToastMessages","started","message","icon","pending","confirmed","success","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","keys","length","getNewObjectFromCollection","objectKey","filter","key","includes","map","getUpdatedObjectFromCollection","object","getObjectFromCollection","identifier","collection","getUpdatedTransaction","tx","currentTx","prevTx","processTransactionUpdates","prevProps","showTransactionToast","toastMeta","getTransactionToastMeta","transactionToastMeta","prevState","ref","node","ConnectButton","alignItems","px","py","h3","textAlign","pb","size","onClick","disabled","contractAbi","constant","inputs","name","outputs","payable","stateMutability","SmartContractControls","getNumber","_ref","esm_extends","getCounter","call","Number","toString","catch","resetCounter","incrementCounter","decrementCounter","_this2","borderBottom","borderColor","mb","fontSize","pt","borderTop","mr","TransactionsCard","fontWeight","keyName","keyIndex","txHash","txStart","substr","txEnd","PrimaryCard","RimbleWeb3","components_SmartContractControls","components_ConnectButton","components_TransactionsCard","utilities_TransactionToastUtil","InstructionsCard","mt","MissingWeb3Provider","theme","fontSizes","fontWeights","lineHeights","solid","title","copy","fonts","serif","sansSerif","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","shadows","opacity","colors","primary","blue","navy","copyColor","black","near-black","dark-gray","mid-gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","blacks","whites","GlobalStyle","createGlobalStyle","_templateObject","App","className","components_Header","components_PrimaryCard","components_MissingWeb3Provider","components_InstructionsCard","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3f6815ef.chunk.js","sourcesContent":["import React from \"react\";\nimport Web3 from \"web3\"; // uses latest 1.x.x version\n\nconst RimbleTransactionContext = React.createContext({\n  contract: {},\n  account: {},\n  web3: {},\n  transactions: {},\n  initWeb3: () => {},\n  initContract: () => {},\n  initAccount: () => {}\n});\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  // Initialize a web3 provider\n  initWeb3 = async () => {\n    let web3 = {};\n\n    // Check for modern web3 provider\n    if (window.ethereum) {\n      console.log(\"Using modern web3 provider.\");\n      web3 = new Web3(window.ethereum);\n    }\n    // Legacy dapp browsers, public wallet address always exposed\n    else if (window.web3) {\n      console.log(\"Legacy web3 provider. Try updating.\");\n      web3 = new Web3(window.web3.currentProvider);\n    }\n    // Non-dapp browsers...\n    else {\n      console.log(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n\n      web3 = false;\n    }\n\n    this.setState({ web3 });\n  };\n\n  initContract = async (address, abi) => {\n    console.log(\"creating contract\");\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = await new this.state.web3.eth.Contract(abi, address);\n      this.setState({ contract });\n    } catch (error) {\n      console.log(\"Could not create contract.\");\n      window.toastProvider.addMessage(\"Contract creation failed.\", {\n        variant: \"failure\"\n      });\n    }\n  };\n\n  initAccount = async () => {\n    try {\n      // Request account access if needed\n      await window.ethereum.enable().then(wallets => {\n        const account = wallets[0];\n        this.setState({ account });\n        console.log(\"wallet address:\", this.state.account);\n      });\n    } catch (error) {\n      // User denied account access...\n      console.log(\"error:\", error);\n      window.toastProvider.addMessage(\"User needs to CONNECT wallet\", {\n        variant: \"failure\"\n      });\n    }\n  };\n\n  contractMethodSendWrapper = contractMethod => {\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction();\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.method = contractMethod;\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { contract, account } = this.state;\n\n    try {\n      contract.methods[contractMethod]()\n        .send({ from: account })\n        .on(\"transactionHash\", hash => {\n          // Submitted to block and received transaction hash\n          // Set properties on the current transaction\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n        })\n        .on(\"confirmation\", (confirmationNumber, receipt) => {\n          // Update confirmation count on each subsequent confirmation that's received\n          transaction.confirmationCount += 1;\n\n          // How many confirmations should be received before informing the user\n          const confidenceThreshold = 3;\n\n          if (transaction.confirmationCount === 1) {\n            // Initial confirmation receipt\n            transaction.status = \"confirmed\";\n          } else if (transaction.confirmationCount < confidenceThreshold) {\n            // Not enough confirmations to match threshold\n          } else if (transaction.confirmationCount === confidenceThreshold) {\n            // Confirmations match threshold\n            // Check the status from result since we are confident in the result\n            if (receipt.status) {\n              transaction.status = \"success\";\n            } else if (!receipt.status) {\n              transaction.status = \"error\";\n            }\n          } else if (transaction.confirmationCount > confidenceThreshold) {\n            // Confidence threshold met\n          }\n          // Update transaction with receipt details\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n        })\n        .on(\"receipt\", receipt => {\n          // Received receipt, met total number of confirmations\n          transaction.recentEvent = \"receipt\";\n          this.updateTransaction(transaction);\n        })\n        .on(\"error\", error => {\n          // Errored out\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n          // TODO: should this be a custom error? What is the error here?\n          // TODO: determine how to handle error messages globally\n          window.toastProvider.addMessage(\"Value change failed\", {\n            secondaryMessage: \"Could not change value.\",\n            actionHref: \"\",\n            actionText: \"\",\n            variant: \"failure\"\n          });\n        });\n    } catch (error) {\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Value change failed\", {\n        secondaryMessage: \"Could not change value on smart contract\",\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\"\n      });\n    }\n  };\n\n  // Create tx\n  createTransaction = () => {\n    let transaction = {};\n    transaction.created = Date.now();\n    transaction.lastUpdated = Date.now();\n    transaction.status = \"initialized\";\n    transaction.confirmationCount = 0;\n\n    return transaction;\n  };\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  };\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n  };\n\n  state = {\n    contract: {},\n    account: null,\n    web3: null,\n    transactions: {},\n    initWeb3: this.initWeb3,\n    initContract: this.initContract,\n    initAccount: this.initAccount,\n    contractMethodSendWrapper: this.contractMethodSendWrapper\n  };\n\n  componentDidMount() {\n    this.initWeb3();\n  }\n\n  render() {\n    return (\n      <RimbleTransactionContext.Provider value={this.state} {...this.props} />\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport { Box, Flex, Link, Button, Heading } from \"rimble-ui\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <Box bg=\"primary\" p={3} justifyContent=\"center\" flexDirection=\"column\">\n        <Flex justifyContent=\"flex-end\">\n          <Link\n            href=\"https://github.com/ConsenSys/rimble-app-demo\"\n            target=\"_blank\"\n          >\n            <Button>GitHub</Button>\n          </Link>\n        </Flex>\n\n        <Box width=\"400px\" mx=\"auto\">\n          <Heading.h2 color={\"white\"}>Rimble App Demo</Heading.h2>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","const TransactionToastMessages = {\n  started: {\n    message: \"Change submitted\",\n    secondaryMessage: \"Confirm in MetaMask\",\n    actionHref: \"\",\n    actionText: \"\",\n    variant: \"default\",\n    icon: \"InfoOutline\"\n  },\n  pending: {\n    message: \"Processing change...\",\n    secondaryMessage: \"This may take a few minutes\",\n    actionHref: \"\",\n    actionText: \"\",\n    variant: \"processing\"\n  },\n  confirmed: {\n    message: \"First block confirmed\",\n    secondaryMessage: \"Your change is in progress\",\n    actionHref: \"\",\n    actionText: \"\",\n    variant: \"processing\"\n  },\n  success: {\n    message: \"Smart contract value changed\",\n    variant: \"success\"\n  },\n  error: {\n    message: \"Value change failed\",\n    secondaryMessage: \"Make sure you have enough Ether (ETH) and try again\",\n    actionHref: \"\",\n    actionText: \"\",\n    variant: \"failure\"\n  }\n};\n\nexport default TransactionToastMessages;\n","import React from \"react\";\nimport TransactionToastMessages from \"./content/TransactionToastMessages\";\nimport { ToastMessage } from \"rimble-ui\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        }\n      })\n      .filter(object => typeof object !== \"undefined\");\n    return updatedTransaction[0];\n  };\n\n  // Returns an object from a collection based on a given identifier\n  getObjectFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      prevTx = this.getObjectFromCollection(currentTx.created, prevCollection);\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx !== null && typeof tx !== \"undefined\") {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n    let transactionHash = transaction.transactionHash;\n\n    // switch (status) {\n    //   case \"started\":\n    //     transactionToastMeta = {\n    //       message: \"Change submitted\",\n    //       secondaryMessage: \"Confirm in MetaMask\",\n    //       actionHref: \"\",\n    //       actionText: \"\",\n    //       variant: \"default\",\n    //       icon: \"InfoOutline\"\n    //     };\n    //     break;\n    //   case \"pending\":\n    //     transactionToastMeta = {\n    //       message: \"Processing change...\",\n    //       secondaryMessage: \"This may take a few minutes\",\n    //       actionHref: \"\",\n    //       actionText: \"\",\n    //       variant: \"processing\"\n    //     };\n    //     break;\n    //   case \"confirmed\":\n    //     transactionToastMeta = {\n    //       message: \"First block confirmed\",\n    //       secondaryMessage: \"Your change is in progress\",\n    //       actionHref: \"https://rinkeby.etherscan.io/tx/\" + transactionHash,\n    //       actionText: \"Check progress\",\n    //       variant: \"processing\"\n    //     };\n    //     break;\n    //   case \"success\":\n    //     transactionToastMeta = {\n    //       message: \"Smart contract value changed\",\n    //       variant: \"success\"\n    //     };\n    //     break;\n    //   case \"error\":\n    //     transactionToastMeta = {\n    //       message: \"Value change failed\",\n    //       secondaryMessage:\n    //         \"Make sure you have enough Ether (ETH) and try again\",\n    //       actionHref: \"\",\n    //       actionText: \"\",\n    //       variant: \"failure\"\n    //     };\n    //     break;\n    //   default:\n    //     break;\n    // }\n\n    switch (status) {\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        break;\n    }\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import React from \"react\";\nimport { Flex, Heading, MetaMaskButton } from \"rimble-ui\";\n\nclass ConnectButton extends React.Component {\n  render() {\n    return (\n      <Flex flexDirection=\"column\" alignItems=\"center\" px={3} py={5}>\n        <Heading.h3 textAlign=\"center\" pb={4}>\n          Connect with MetaMask to try out the demo\n        </Heading.h3>\n\n        <MetaMaskButton\n          size={\"medium\"}\n          mx=\"auto\"\n          onClick={this.props.initAccount}\n          disabled={this.props.account}\n        >\n          Connect with MetaMask\n        </MetaMaskButton>\n      </Flex>\n    );\n  }\n}\n\nexport default ConnectButton;\n","import React from \"react\";\nimport { Flex, Box, Text, Button, OutlineButton } from \"rimble-ui\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\n\n// Address of the deployed smart contract (from etherscan)\nconst contractAddress = \"0x0f69f0ac4b92bf0d101b5747eed3fa6b653a36f8\";\n\n// Copied from remix ide\nconst contractAbi = [\n  {\n    constant: false,\n    inputs: [],\n    name: \"decrementCounter\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"incrementCounter\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"reset\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"getCounter\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"int256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  }\n];\n\nclass SmartContractControls extends React.Component {\n  state = {\n    value: 0\n  };\n\n  // gets the number stored in smart contract storage\n  getNumber = ({ ...props }) => {\n    const { contract } = this.props;\n    try {\n      contract.methods\n        .getCounter()\n        .call()\n        .then(value => {\n          value = Number(value.toString());\n          this.setState({ value });\n        })\n        .catch(error => {\n          console.log(error);\n          this.setState({ error });\n        });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    Object.keys(this.props.transactions).map(key => {\n      let tx = this.props.transactions[key];\n      if (tx.status === \"success\" && tx.confirmationCount === 4) {\n        console.log(\"Getting updated number.\");\n        this.getNumber();\n      }\n    });\n  };\n\n  resetCounter = () => {\n    this.props.contractMethodSendWrapper(\"reset\");\n  };\n\n  incrementCounter = () => {\n    this.props.contractMethodSendWrapper(\"incrementCounter\");\n  };\n\n  decrementCounter = () => {\n    this.props.contractMethodSendWrapper(\"decrementCounter\");\n  };\n\n  componentDidMount() {\n    // Init the contract after the web3 provider has been determined\n    this.props.initContract(contractAddress, contractAbi).then(() => {\n      // Can finally interact with contract\n      this.getNumber();\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <Box>\n        <Flex\n          px={0}\n          pb={4}\n          borderBottom={1}\n          borderColor={\"#E8E8E8\"}\n          justifyContent=\"space-between\"\n          alignItems=\"end\"\n        >\n          <Text mb={2} fontSize={3}>\n            Smart contract value\n          </Text>\n\n          <OutlineButton\n            size={\"small\"}\n            onClick={this.resetCounter}\n            disabled={!this.props.account}\n          >\n            Reset\n          </OutlineButton>\n        </Flex>\n\n        <Box py={4}>\n          <Text fontSize={6} textAlign={\"center\"}>\n            {this.state.value}\n          </Text>\n        </Box>\n\n        <Flex\n          px={0}\n          pt={4}\n          borderTop={1}\n          borderColor={\"#E8E8E8\"}\n          justifyContent=\"space-between\"\n        >\n          <Button size={\"medium\"} mr={4} onClick={this.incrementCounter}>\n            Increase value\n          </Button>\n\n          <Button size={\"medium\"} onClick={this.decrementCounter}>\n            Decrease value\n          </Button>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default SmartContractControls;\n","import React from \"react\";\nimport { Card, Heading, Box, Flex, Text } from \"rimble-ui\";\n\nclass TransactionsCard extends React.Component {\n  render() {\n    return (\n      <Card width={\"400px\"} mx={\"auto\"} px={4}>\n        <Heading.h2 fontSize={3} textAlign={\"center\"} px={4} mb={5}>\n          Transactions\n        </Heading.h2>\n        <Box>\n          {Object.keys(this.props.transactions).length > 0 ? (\n            <Flex>\n              <Text width={\"33%\"} textAlign={\"center\"} fontWeight=\"bold\">\n                txHash\n              </Text>\n              <Text width={\"33%\"} textAlign={\"center\"} fontWeight=\"bold\">\n                Status\n              </Text>\n              <Text width={\"33%\"} textAlign={\"center\"} fontWeight=\"bold\">\n                Confirmations\n              </Text>\n            </Flex>\n          ) : null}\n\n          {Object.keys(this.props.transactions).length < 1 ? (\n            <Text textAlign={\"center\"}>No recent transactions</Text>\n          ) : (\n            Object.keys(this.props.transactions).map((keyName, keyIndex) => {\n              let txHash = \"\";\n              if (this.props.transactions[keyName].transactionHash) {\n                txHash = this.props.transactions[\n                  keyName\n                ].transactionHash.toString();\n                const txStart = txHash.substr(0, 7);\n                const txEnd = txHash.substr(txHash.length - 4);\n                txHash = txStart + \"...\" + txEnd;\n              }\n\n              return (\n                <Flex>\n                  <Text width={\"33%\"} textAlign={\"center\"}>\n                    {txHash}\n                  </Text>\n                  <Text width={\"33%\"} textAlign={\"center\"}>\n                    {this.props.transactions[keyName].status}\n                  </Text>\n                  <Text width={\"33%\"} textAlign={\"center\"}>\n                    {this.props.transactions[keyName].confirmationCount}\n                  </Text>\n                </Flex>\n              );\n            })\n          )}\n        </Box>\n      </Card>\n    );\n  }\n}\n\nexport default TransactionsCard;\n","import React from \"react\";\nimport { Card } from \"rimble-ui\";\n\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\n\nimport ConnectButton from \"./ConnectButton\";\nimport SmartContractControls from \"./SmartContractControls\";\nimport TransactionsCard from \"./TransactionsCard\";\n\nclass PrimaryCard extends React.Component {\n  render() {\n    return (\n      <RimbleWeb3.Consumer>\n        {({\n          contract,\n          account,\n          transactions,\n          initContract,\n          initAccount,\n          contractMethodSendWrapper\n        }) => (\n          <div>\n            <Card width={\"400px\"} mx={\"auto\"} px={4}>\n              {!account ? (\n                <ConnectButton initAccount={initAccount} account={account} />\n              ) : (\n                <SmartContractControls\n                  contract={contract}\n                  account={account}\n                  transactions={transactions}\n                  initContract={initContract}\n                  contractMethodSendWrapper={contractMethodSendWrapper}\n                />\n              )}\n            </Card>\n\n            <TransactionsCard transactions={transactions} />\n            <TransactionToastUtil transactions={transactions} />\n          </div>\n        )}\n      </RimbleWeb3.Consumer>\n    );\n  }\n}\n\nexport default PrimaryCard;\n","import React from \"react\";\nimport { Box, Heading, Text } from \"rimble-ui\";\n\nclass InstructionsCard extends React.Component {\n  render() {\n    return (\n      <Box width={\"400px\"} mx=\"auto\" mt={4}>\n        <Heading.h3>Instructions:</Heading.h3>\n        <ol>\n          <li>\n            <Text p={1}>Make sure MetaMask is working in your browser</Text>\n          </li>\n          <li>\n            <Text p={1}>Set the network to Rinkeby Test Network</Text>\n          </li>\n          <li>\n            <Text p={1}>You'll need a little bit of ETH for gas fees</Text>\n          </li>\n        </ol>\n      </Box>\n    );\n  }\n}\n\nexport default InstructionsCard;\n","import React from \"react\";\nimport { Card, Heading, Text, Link } from \"rimble-ui\"\n\nclass MissingWeb3Provider extends React.Component {\n    render() {\n        return(\n            <Card width={\"600px\"} mx={\"auto\"} px={4}>\n                <Heading.h2>No Web3 Provider Available</Heading.h2>\n\n                <Text>You will need to <Link href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\" target=\"_blank\">install MetaMask</Link> to use this dApp.</Text>\n            </Card>\n        )\n    }\n}\n\nexport default MissingWeb3Provider\n","// theme.js\nexport default {\n  fontSizes: [\n    12, 14, 16, 20, 24, 32, 48, 64\n  ],\n  fontWeights: [\n    0, 300, 400, 600, 700\n  ],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: 'athelas, georgia, times, serif',\n    sansSerif: '\"Source Sans Pro\", -apple-system, sans-serif',\n  },\n  space: [\n    0, 4, 8, 16, 32, 64, 128, 256\n  ],\n  radii: [\n    '0', '4px', '8px', '16px'\n  ],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [\n    0,\n    '1px solid'\n  ],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)'\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: '#4E3FCE',\n    blue: '#007ce0',\n    navy: '#004175',\n    copyColor: '#3F3D4B',\n    // black: '#000',\n    black: '#000e1a',\n      'near-black': '#111',\n      'dark-gray': '#333',\n      'mid-gray': '#555',\n    // gray: ' #777',\n    grey: '#CCC',\n    silver: '#999',\n      'light-silver': '#aaa',\n      'moon-gray': '#ccc',\n      'light-gray': '#eee',\n      'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ]\n  }\n}\n","import React, { Component } from \"react\";\nimport { ThemeProvider, Box, Text, Flex } from \"rimble-ui\";\n\nimport RimbleWeb3 from \"./utilities/RimbleWeb3\";\n\nimport Header from \"./components/Header\";\nimport PrimaryCard from \"./components/PrimaryCard\";\nimport InstructionsCard from \"./components/InstructionsCard\";\nimport MissingWeb3Provider from \"./components/MissingWeb3Provider\";\n\nimport theme from \"./theme\";\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  body, html {\n    margin: 0;\n    padding: 0;\n    background-color: #efefef;\n  }\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme} className=\"App\">\n        <Header />\n        <Flex justifyContent=\"center\" p={4}>\n          <Text width=\"400px\">\n            This is a starter React dApp that uses the Rimble UI component\n            library to call methods on a smart contract deployed to the Ethereum\n            Rinkeby testnet.\n          </Text>\n        </Flex>\n\n        <RimbleWeb3>\n          <RimbleWeb3.Consumer>\n            {({ web3 }) => (\n              <Box>\n                {/* Conditionally render child comonents dependent on web3 being loaded */}\n                {!web3 ? <MissingWeb3Provider /> : <PrimaryCard />}\n              </Box>\n            )}\n          </RimbleWeb3.Consumer>\n        </RimbleWeb3>\n        <InstructionsCard />\n        <GlobalStyle />\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}