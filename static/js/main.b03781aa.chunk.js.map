{"version":3,"sources":["utilities/RimbleWeb3.js","components/Header.js","utilities/TransactionToastUtil.js","components/ConnectButton.js","components/SmartContractControls.js","components/TransactionsCard.js","components/PrimaryCard.js","components/InstructionsCard.js","components/MissingWeb3Provider.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["RimbleTransactionContext","React","createContext","contract","account","web3","transactions","initWeb3","initContract","initAccount","RimbleTransaction","_callee","regenerator_default","a","wrap","_context","prev","next","window","ethereum","console","log","Web3","currentProvider","_this","setState","stop","this","_callee2","address","abi","_context2","state","eth","Contract","sent","t0","toastProvider","addMessage","variant","_callee3","_context3","enable","then","wallets","contractMethodSendWrapper","contractMethod","transaction","createTransaction","addTransaction","status","updateTransaction","_this$state","methods","send","from","on","hash","transactionHash","recentEvent","confirmationNumber","receipt","confirmationCount","error","secondaryMessage","actionHref","actionText","created","Date","now","lastUpdated","Object","objectSpread","concat","updatedTransaction","react_default","createElement","Provider","assign","value","props","Component","Consumer","Header","index_es","bg","p","justifyContent","flexDirection","href","target","width","mx","h2","color","TransactionToastUtil","processTransactionUpdates","prevProps","keys","length","map","key","transactionKey","filter","includes","showTransactionToast","toastMeta","getTransactionToastMeta","transactionToastMeta","message","icon","prevState","ref","node","ConnectButton","alignItems","px","py","h3","textAlign","pb","size","onClick","disabled","contractAbi","constant","inputs","name","outputs","payable","stateMutability","type","SmartContractControls","getNumber","_ref","esm_extends","getCounter","call","Number","toString","catch","resetCounter","incrementCounter","decrementCounter","_this2","borderBottom","borderColor","mb","fontSize","pt","borderTop","mr","TransactionsCard","fontWeight","keyName","keyIndex","txHash","txStart","substr","txEnd","PrimaryCard","RimbleWeb3","components_SmartContractControls","components_ConnectButton","components_TransactionsCard","utilities_TransactionToastUtil","InstructionsCard","mt","MissingWeb3Provider","theme","fontSizes","fontWeights","lineHeights","solid","title","copy","fonts","serif","sansSerif","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","shadows","opacity","colors","primary","blue","navy","copyColor","black","near-black","dark-gray","mid-gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","blacks","whites","GlobalStyle","createGlobalStyle","_templateObject","App","className","components_Header","components_PrimaryCard","components_MissingWeb3Provider","components_InstructionsCard","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b03781aa.chunk.js","sourcesContent":["import React from \"react\";\nimport Web3 from \"web3\"; // uses latest 1.x.x version\n\nconst RimbleTransactionContext = React.createContext({\n  contract: {},\n  account: {},\n  web3: {},\n  transactions: {},\n  initWeb3: () => {},\n  initContract: () => {},\n  initAccount: () => {}\n});\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  // Initialize a web3 provider\n  initWeb3 = async () => {\n    let web3 = {};\n\n    // Check for modern web3 provider\n    if (window.ethereum) {\n      console.log(\"Using modern web3 provider.\");\n      web3 = new Web3(window.ethereum);\n    }\n    // Legacy dapp browsers, public wallet address always exposed\n    else if (window.web3) {\n      console.log(\"Legacy web3 provider. Try updating.\");\n      web3 = new Web3(window.web3.currentProvider);\n    }\n    // Non-dapp browsers...\n    else {\n      console.log(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n\n      web3 = false;\n    }\n\n    this.setState({ web3 });\n  };\n\n  initContract = async (address, abi) => {\n    console.log(\"creating contract\");\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = await new this.state.web3.eth.Contract(abi, address);\n      this.setState({ contract });\n    } catch (error) {\n      console.log(\"Could not create contract.\");\n      window.toastProvider.addMessage(\"Contract creation failed.\", {\n        variant: \"failure\"\n      });\n    }\n  };\n\n  initAccount = async () => {\n    try {\n      // Request account access if needed\n      await window.ethereum.enable().then(wallets => {\n        const account = wallets[0];\n        this.setState({ account });\n        console.log(\"wallet address:\", this.state.account);\n      });\n    } catch (error) {\n      // User denied account access...\n      console.log(\"error:\", error);\n      window.toastProvider.addMessage(\"User needs to CONNECT wallet\", {\n        variant: \"failure\"\n      });\n    }\n  };\n\n  contractMethodSendWrapper = contractMethod => {\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction();\n    this.addTransaction(transaction);\n\n    // Show toast for starting transaction\n    transaction.status = \"started\";\n    this.updateTransaction(transaction);\n\n    const { contract, account } = this.state;\n\n    try {\n      contract.methods[contractMethod]()\n        .send({ from: account })\n        .on(\"transactionHash\", hash => {\n          // Submitted to block and received transaction hash\n          // Set properties on the current transaction\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n        })\n        .on(\"confirmation\", (confirmationNumber, receipt) => {\n          // Update confirmation count on each subsequent confirmation that's received\n          transaction.confirmationCount += 1;\n\n          // How many confirmations should be received before informing the user\n          const confidenceThreshold = 3;\n\n          if (transaction.confirmationCount === 1) {\n            // Initial confirmation receipt\n            transaction.status = \"confirmed\";\n          } else if (transaction.confirmationCount < confidenceThreshold) {\n            // Not enough confirmations to match threshold\n          } else if (transaction.confirmationCount === confidenceThreshold) {\n            // Confirmations match threshold\n            // Check the status from result since we are confident in the result\n            if (receipt.status) {\n              transaction.status = \"success\";\n            } else if (!receipt.status) {\n              transaction.status = \"error\";\n            }\n          } else if (transaction.confirmationCount > confidenceThreshold) {\n            // Confidence threshold met\n          }\n          // Update transaction with receipt details\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n        })\n        .on(\"receipt\", receipt => {\n          // Received receipt, met total number of confirmations\n          transaction.recentEvent = \"receipt\";\n          this.updateTransaction(transaction);\n        })\n        .on(\"error\", error => {\n          // Errored out\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n          // TODO: should this be a custom error? What is the error here?\n          // TODO: determine how to handle error messages globally\n          // This display for both a user rejection and a contract failure. Is there a way to differentiate?\n          window.toastProvider.addMessage(\"Value change failed\", {\n            secondaryMessage: \"Could not change value.\",\n            actionHref: \"\",\n            actionText: \"\",\n            variant: \"failure\"\n          });\n        });\n    } catch (error) {\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Value change failed\", {\n        secondaryMessage: \"Could not change value on smart contract\",\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\"\n      });\n    }\n  };\n\n  // Create tx\n  createTransaction = () => {\n    let transaction = {};\n    transaction.created = Date.now();\n    transaction.lastUpdated = Date.now();\n    transaction.status = \"initialized\";\n    transaction.confirmationCount = 0;\n\n    return transaction;\n  };\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  };\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    updatedTransaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = updatedTransaction;\n    this.setState({ transactions });\n  };\n\n  state = {\n    contract: {},\n    account: null,\n    web3: null,\n    transactions: {},\n    initWeb3: this.initWeb3,\n    initContract: this.initContract,\n    initAccount: this.initAccount,\n    contractMethodSendWrapper: this.contractMethodSendWrapper\n  };\n\n  componentDidMount() {\n    this.initWeb3();\n  }\n\n  render() {\n    return (\n      <RimbleTransactionContext.Provider value={this.state} {...this.props} />\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport { Box, Flex, Link, Button, Heading } from \"rimble-ui\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <Box bg=\"primary\" p={3} justifyContent=\"center\" flexDirection=\"column\">\n        <Flex justifyContent=\"flex-end\">\n          <Link\n            href=\"https://github.com/ConsenSys/rimble-app-demo\"\n            target=\"_blank\"\n          >\n            <Button>GitHub</Button>\n          </Link>\n        </Flex>\n\n        <Box width=\"400px\" mx=\"auto\">\n          <Heading.h2 color={\"white\"}>Rimble App Demo</Heading.h2>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\n\nimport { ToastMessage } from \"rimble-ui\";\n\nclass TransactionToastUtil extends React.Component {\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let updatedTransaction = {};\n    let transaction = {};\n\n    // Only run this if there's something different\n    if (\n      prevProps &&\n      prevProps.transactions !== this.props.transactions &&\n      Object.keys(prevProps.transactions).length > 0\n    ) {\n      // Get the updated transaction object\n      // TODO: this assumes that there was a previous object to compare - which isn't true for STARTED\n\n      updatedTransaction = Object.keys(this.props.transactions).map(key => {\n        return prevProps.transactions[key] &&\n          prevProps.transactions[key].status ===\n            this.props.transactions[key].status\n          ? this.props.transactions[key]\n          : null;\n      });\n      transaction = updatedTransaction[0];\n    }\n\n    // If no matching tx in prevProps (new), then use tx from this.props\n    if (Object.keys(transaction).length === 0) {\n      const transactionKey = Object.keys(this.props.transactions).filter(\n        key => {\n          return !Object.keys(prevProps.transactions).includes(key);\n        }\n      );\n      transaction = this.props.transactions[transactionKey];\n    }\n\n    // Process different transaction status'\n    if (\n      typeof transaction !== \"undefined\" &&\n      Object.keys(transaction).length !== 0\n    ) {\n      switch (transaction.status) {\n        case \"started\":\n          this.showTransactionToast(transaction);\n          break;\n        case \"pending\":\n          this.showTransactionToast(transaction);\n          break;\n        case \"confirmed\":\n          // this.showTransactionToast(transaction);\n          break;\n        case \"success\":\n          // TODO: How to honor the count to verify here? Pass in as prop? Read from context?\n          if (transaction.confirmationCount === 3)\n            this.showTransactionToast(transaction);\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n    let transactionHash = transaction.transactionHash;\n\n    switch (status) {\n      case \"started\":\n        transactionToastMeta = {\n          message: \"Change submitted\",\n          secondaryMessage: \"Confirm in MetaMask\",\n          actionHref: \"\",\n          actionText: \"\",\n          variant: \"default\",\n          icon: \"InfoOutline\"\n        };\n        break;\n      case \"pending\":\n        transactionToastMeta = {\n          message: \"Processing change...\",\n          secondaryMessage: \"This may take a few minutes\",\n          actionHref: \"\",\n          actionText: \"\",\n          variant: \"processing\"\n        };\n        break;\n      case \"confirmed\":\n        transactionToastMeta = {\n          message: \"First block confirmed\",\n          secondaryMessage: \"Your change is in progress\",\n          actionHref: \"https://rinkeby.etherscan.io/tx/\" + transactionHash,\n          actionText: \"Check progress\",\n          variant: \"processing\"\n        };\n        break;\n      case \"success\":\n        transactionToastMeta = {\n          message: \"Smart contract value changed\",\n          variant: \"success\"\n        };\n        break;\n      case \"error\":\n        transactionToastMeta = {\n          message: \"Value change failed\",\n          secondaryMessage:\n            \"Make sure you have enough Ether (ETH) and try again\",\n          actionHref: \"\",\n          actionText: \"\",\n          variant: \"failure\"\n        };\n        break;\n      default:\n        break;\n    }\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import React from \"react\";\nimport { Flex, Heading, MetaMaskButton } from \"rimble-ui\";\n\nclass ConnectButton extends React.Component {\n  render() {\n    return (\n      <Flex flexDirection=\"column\" alignItems=\"center\" px={3} py={5}>\n        <Heading.h3 textAlign=\"center\" pb={4}>\n          Connect with MetaMask to try out the demo\n        </Heading.h3>\n\n        <MetaMaskButton\n          size={\"medium\"}\n          mx=\"auto\"\n          onClick={this.props.initAccount}\n          disabled={this.props.account}\n        >\n          Connect with MetaMask\n        </MetaMaskButton>\n      </Flex>\n    );\n  }\n}\n\nexport default ConnectButton;\n","import React from \"react\";\nimport { Flex, Box, Text, Button, OutlineButton } from \"rimble-ui\";\n\n// Address of the deployed smart contract (from etherscan)\nconst contractAddress = \"0x0f69f0ac4b92bf0d101b5747eed3fa6b653a36f8\";\n\n// Copied from remix ide\nconst contractAbi = [\n  {\n    constant: false,\n    inputs: [],\n    name: \"decrementCounter\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"incrementCounter\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"reset\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"getCounter\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"int256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  }\n];\n\nclass SmartContractControls extends React.Component {\n  state = {\n    value: 0\n  };\n\n  // gets the number stored in smart contract storage\n  getNumber = ({ ...props }) => {\n    const { contract } = this.props;\n    try {\n      contract.methods\n        .getCounter()\n        .call()\n        .then(value => {\n          value = Number(value.toString());\n          this.setState({ value });\n        })\n        .catch(error => {\n          console.log(error);\n          this.setState({ error });\n        });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let updatedTransaction = {};\n\n    // Only run this if there's something different\n    if (\n      prevProps &&\n      prevProps.transactions !== this.props.transactions &&\n      Object.keys(prevProps.transactions).length > 0\n    ) {\n      // Get the updated transaction object\n      updatedTransaction = Object.keys(this.props.transactions).map(key => {\n        // TODO: This is failing when creating a second transaction, can't read property status of null\n\n        return prevProps.transactions[key] &&\n          prevProps.transactions[key].status ===\n            this.props.transactions[key].status\n          ? this.props.transactions[key]\n          : null;\n      });\n    }\n\n    // Process different transaction status'\n    if (\n      updatedTransaction.length > 0 &&\n      updatedTransaction[0].status === \"success\" &&\n      updatedTransaction[0].confirmationNumber === 3\n    ) {\n      console.log(\"Getting updated number.\");\n      this.getNumber();\n    }\n  };\n\n  resetCounter = () => {\n    this.props.contractMethodSendWrapper(\"reset\");\n  };\n\n  incrementCounter = () => {\n    this.props.contractMethodSendWrapper(\"incrementCounter\");\n  };\n\n  decrementCounter = () => {\n    this.props.contractMethodSendWrapper(\"decrementCounter\");\n  };\n\n  componentDidMount() {\n    // Init the contract after the web3 provider has been determined\n    this.props.initContract(contractAddress, contractAbi).then(() => {\n      // Can finally interact with contract\n      this.getNumber();\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <Box>\n        <Flex\n          px={0}\n          pb={4}\n          borderBottom={1}\n          borderColor={\"#E8E8E8\"}\n          justifyContent=\"space-between\"\n          alignItems=\"end\"\n        >\n          <Text mb={2} fontSize={3}>\n            Smart contract value\n          </Text>\n\n          <OutlineButton\n            size={\"small\"}\n            onClick={this.resetCounter}\n            disabled={!this.props.account}\n          >\n            Reset\n          </OutlineButton>\n        </Flex>\n\n        <Box py={4}>\n          <Text fontSize={6} textAlign={\"center\"}>\n            {this.state.value}\n          </Text>\n        </Box>\n\n        <Flex\n          px={0}\n          pt={4}\n          borderTop={1}\n          borderColor={\"#E8E8E8\"}\n          justifyContent=\"space-between\"\n        >\n          <Button size={\"medium\"} mr={4} onClick={this.incrementCounter}>\n            Increase value\n          </Button>\n\n          <Button size={\"medium\"} onClick={this.decrementCounter}>\n            Decrease value\n          </Button>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default SmartContractControls;\n","import React from \"react\";\nimport { Card, Heading, Box, Flex, Text } from \"rimble-ui\";\n\nclass TransactionsCard extends React.Component {\n  render() {\n    return (\n      <Card width={\"400px\"} mx={\"auto\"} px={4}>\n        <Heading.h2 fontSize={3} textAlign={\"center\"} px={4} mb={5}>\n          Transactions\n        </Heading.h2>\n        <Box>\n          {Object.keys(this.props.transactions).length > 0 ? (\n            <Flex>\n              <Text width={\"33%\"} textAlign={\"center\"} fontWeight=\"bold\">\n                txHash\n              </Text>\n              <Text width={\"33%\"} textAlign={\"center\"} fontWeight=\"bold\">\n                Status\n              </Text>\n              <Text width={\"33%\"} textAlign={\"center\"} fontWeight=\"bold\">\n                Confirmations\n              </Text>\n            </Flex>\n          ) : null}\n\n          {Object.keys(this.props.transactions).length < 1 ? (\n            <Text textAlign={\"center\"}>No recent transactions</Text>\n          ) : (\n            Object.keys(this.props.transactions).map((keyName, keyIndex) => {\n              let txHash = \"\";\n              if (this.props.transactions[keyName].transactionHash) {\n                txHash = this.props.transactions[\n                  keyName\n                ].transactionHash.toString();\n                const txStart = txHash.substr(0, 7);\n                const txEnd = txHash.substr(txHash.length - 4);\n                txHash = txStart + \"...\" + txEnd;\n              }\n\n              return (\n                <Flex>\n                  <Text width={\"33%\"} textAlign={\"center\"}>\n                    {txHash}\n                  </Text>\n                  <Text width={\"33%\"} textAlign={\"center\"}>\n                    {this.props.transactions[keyName].status}\n                  </Text>\n                  <Text width={\"33%\"} textAlign={\"center\"}>\n                    {this.props.transactions[keyName].confirmationCount}\n                  </Text>\n                </Flex>\n              );\n            })\n          )}\n        </Box>\n      </Card>\n    );\n  }\n}\n\nexport default TransactionsCard;\n","import React from \"react\";\nimport { Card } from \"rimble-ui\";\n\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\n\nimport ConnectButton from \"./ConnectButton\";\nimport SmartContractControls from \"./SmartContractControls\";\nimport TransactionsCard from \"./TransactionsCard\";\n\nclass PrimaryCard extends React.Component {\n  render() {\n    return (\n      <RimbleWeb3.Consumer>\n        {({\n          contract,\n          account,\n          transactions,\n          initContract,\n          initAccount,\n          contractMethodSendWrapper\n        }) => (\n          <div>\n            <Card width={\"400px\"} mx={\"auto\"} px={4}>\n              {!account ? (\n                <ConnectButton initAccount={initAccount} account={account} />\n              ) : (\n                <SmartContractControls\n                  contract={contract}\n                  account={account}\n                  transactions={transactions}\n                  initContract={initContract}\n                  contractMethodSendWrapper={contractMethodSendWrapper}\n                />\n              )}\n            </Card>\n\n            <TransactionsCard transactions={transactions} />\n            <TransactionToastUtil transactions={transactions} />\n          </div>\n        )}\n      </RimbleWeb3.Consumer>\n    );\n  }\n}\n\nexport default PrimaryCard;\n","import React from \"react\";\nimport { Box, Heading, Text } from \"rimble-ui\";\n\nclass InstructionsCard extends React.Component {\n  render() {\n    return (\n      <Box width={\"400px\"} mx=\"auto\" mt={4}>\n        <Heading.h3>Instructions:</Heading.h3>\n        <ol>\n          <li>\n            <Text p={1}>Make sure MetaMask is working in your browser</Text>\n          </li>\n          <li>\n            <Text p={1}>Set the network to Rinkeby Test Network</Text>\n          </li>\n          <li>\n            <Text p={1}>You'll need a little bit of ETH for gas fees</Text>\n          </li>\n        </ol>\n      </Box>\n    );\n  }\n}\n\nexport default InstructionsCard;\n","import React from \"react\";\nimport { Card, Heading, Text, Link } from \"rimble-ui\"\n\nclass MissingWeb3Provider extends React.Component {\n    render() {\n        return(\n            <Card width={\"600px\"} mx={\"auto\"} px={4}>\n                <Heading.h2>No Web3 Provider Available</Heading.h2>\n\n                <Text>You will need to <Link href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\" target=\"_blank\">install MetaMask</Link> to use this dApp.</Text>\n            </Card>\n        )\n    }\n}\n\nexport default MissingWeb3Provider\n","// theme.js\nexport default {\n  fontSizes: [\n    12, 14, 16, 20, 24, 32, 48, 64\n  ],\n  fontWeights: [\n    0, 300, 400, 600, 700\n  ],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: 'athelas, georgia, times, serif',\n    sansSerif: '\"Source Sans Pro\", -apple-system, sans-serif',\n  },\n  space: [\n    0, 4, 8, 16, 32, 64, 128, 256\n  ],\n  radii: [\n    '0', '4px', '8px', '16px'\n  ],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [\n    0,\n    '1px solid'\n  ],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)'\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: '#4E3FCE',\n    blue: '#007ce0',\n    navy: '#004175',\n    copyColor: '#3F3D4B',\n    // black: '#000',\n    black: '#000e1a',\n      'near-black': '#111',\n      'dark-gray': '#333',\n      'mid-gray': '#555',\n    // gray: ' #777',\n    grey: '#CCC',\n    silver: '#999',\n      'light-silver': '#aaa',\n      'moon-gray': '#ccc',\n      'light-gray': '#eee',\n      'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ]\n  }\n}\n","import React, { Component } from \"react\";\nimport { ThemeProvider, Box, Text, Flex } from \"rimble-ui\";\n\nimport RimbleWeb3 from \"./utilities/RimbleWeb3\";\n\nimport Header from \"./components/Header\";\nimport PrimaryCard from \"./components/PrimaryCard\";\nimport InstructionsCard from \"./components/InstructionsCard\";\nimport MissingWeb3Provider from \"./components/MissingWeb3Provider\";\n\nimport theme from \"./theme\";\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  body, html {\n    margin: 0;\n    padding: 0;\n    background-color: #efefef;\n  }\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme} className=\"App\">\n        <Header />\n        <Flex justifyContent=\"center\" p={4}>\n          <Text width=\"400px\">\n            This is a starter React dApp that uses the Rimble UI component\n            library to call methods on a smart contract deployed to the Ethereum\n            Rinkeby testnet.\n          </Text>\n        </Flex>\n\n        <RimbleWeb3>\n          <RimbleWeb3.Consumer>\n            {({ web3 }) => (\n              <Box>\n                {/* Conditionally render child comonents dependent on web3 being loaded */}\n                {!web3 ? <MissingWeb3Provider /> : <PrimaryCard />}\n              </Box>\n            )}\n          </RimbleWeb3.Consumer>\n        </RimbleWeb3>\n        <InstructionsCard />\n        <GlobalStyle />\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}