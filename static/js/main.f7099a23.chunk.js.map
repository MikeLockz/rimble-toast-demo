{"version":3,"sources":["components/Header.js","components/ConnectButton.js","components/SmartContractControls.js","components/PrimaryCard.js","components/RimbleWeb3.js","components/InstructionsCard.js","components/MissingWeb3Provider.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","index_es","bg","p","justifyContent","flexDirection","href","target","width","mx","h1","color","React","Component","ConnectButton","alignItems","h2","textAlign","pb","size","onClick","this","props","initAccount","disabled","account","contractAbi","constant","inputs","name","outputs","payable","stateMutability","type","SmartContractControls","state","value","getNumber","_ref","Object","esm_extends","contract","_this","methods","getCounter","call","then","Number","toString","setState","catch","error","console","log","resetCounter","contractMethodSendWrapper","incrementCounter","decrementCounter","_this2","initContract","px","borderBottom","borderColor","mb","fontSize","py","pt","borderTop","mr","PrimaryCard","components_SmartContractControls","components_ConnectButton","RimbleTransactionContext","createContext","web3","initWeb3","RimbleTransaction","_callee","regenerator_default","wrap","_context","prev","next","window","ethereum","Web3","currentProvider","stop","_callee2","address","abi","_context2","eth","Contract","sent","t0","toastProvider","addMessage","variant","_callee3","_context3","enable","wallets","contractMethod","transaction","created","Date","now","status","showTransactionToast","_this$state","send","from","on","hash","confirmationNumber","receipt","confidenceThreshold","incomingTransaction","lastUpdated","objectSpread","toastMeta","getTransactionToastMeta","transactionToastMeta","transactionHash","message","secondaryMessage","actionHref","actionText","icon","secondarymessage","Provider","assign","Consumer","InstructionsCard","mt","h3","MissingWeb3Provider","theme","fontSizes","fontWeights","lineHeights","solid","title","copy","fonts","serif","sansSerif","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","shadows","opacity","colors","primary","blue","navy","copyColor","black","near-black","dark-gray","mid-gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","blacks","whites","GlobalStyle","createGlobalStyle","_templateObject","App","className","components_Header","RimbleWeb3","components_PrimaryCard","components_MissingWeb3Provider","ref","node","components_InstructionsCard","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f7099a23.chunk.js","sourcesContent":["import React from \"react\"\nimport { Box, Flex, Link, Button, Heading } from \"rimble-ui\"\n\nclass Header extends React.Component {\n  render() {\n\n    return(\n      <Box bg=\"primary\" p={4} justifyContent=\"center\" flexDirection=\"column\">\n        <Flex justifyContent=\"flex-end\">\n          <Link href=\"https://github.com/ConsenSys/rimble-app-demo\" target=\"_blank\">\n            <Button>GitHub</Button>\n          </Link>\n        </Flex>\n\n        <Box width=\"600px\" mx=\"auto\">\n          <Heading.h1 color={'white'}>Rimble App Demo</Heading.h1>\n        </Box>\n      </Box>\n    )\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport { Flex, Heading, MetaMaskButton } from \"rimble-ui\";\n\nclass ConnectButton extends React.Component {\n  render() {\n    return (\n      <Flex flexDirection=\"column\" alignItems=\"center\" p={5}>\n        <Heading.h2 textAlign=\"center\" pb={4}>\n          Connect with MetaMask to try out the demo\n        </Heading.h2>\n\n        <MetaMaskButton\n          size={\"medium\"}\n          mx=\"auto\"\n          onClick={this.props.initAccount}\n          disabled={this.props.account}\n        >\n          Connect with MetaMask\n        </MetaMaskButton>\n      </Flex>\n    );\n  }\n}\n\nexport default ConnectButton;\n","import React from \"react\";\nimport { Flex, Box, Text, Button, OutlineButton } from \"rimble-ui\";\n\n// Address of the deployed smart contract (from etherscan)\nconst contractAddress = \"0x0f69f0ac4b92bf0d101b5747eed3fa6b653a36f8\";\n\n// Copied from remix ide\nconst contractAbi = [\n  {\n    constant: false,\n    inputs: [],\n    name: \"decrementCounter\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"incrementCounter\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"reset\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"getCounter\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"int256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  }\n];\n\nclass SmartContractControls extends React.Component {\n  state = {\n    value: 0\n  };\n\n  // gets the number stored in smart contract storage\n  getNumber = ({ ...props }) => {\n    const { contract } = this.props;\n    try {\n      contract.methods\n        .getCounter()\n        .call()\n        .then(value => {\n          value = Number(value.toString());\n          this.setState({ value });\n        })\n        .catch(error => {\n          console.log(error);\n          this.setState({ error });\n        });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  resetCounter = () => {\n    this.props.contractMethodSendWrapper(\"reset\");\n  };\n\n  incrementCounter = () => {\n    this.props.contractMethodSendWrapper(\"incrementCounter\");\n  };\n\n  decrementCounter = () => {\n    this.props.contractMethodSendWrapper(\"decrementCounter\");\n  };\n\n  componentDidMount() {\n    // Init the contract after the web3 provider has been determined\n    this.props.initContract(contractAddress, contractAbi).then(() => {\n      // Can finally interact with contract\n      this.getNumber();\n    });\n  }\n\n  render() {\n    return (\n      <Box>\n        <Flex\n          px={0}\n          pb={4}\n          borderBottom={1}\n          borderColor={\"#E8E8E8\"}\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Text mb={2} fontSize={3}>\n            Smart contract value\n          </Text>\n\n          <OutlineButton\n            size={\"medium\"}\n            onClick={this.resetCounter}\n            disabled={!this.props.account}\n          >\n            Reset\n          </OutlineButton>\n        </Flex>\n\n        <Box py={4}>\n          <Text fontSize={6} textAlign={\"center\"}>\n            {this.state.value}\n          </Text>\n        </Box>\n\n        <Flex\n          px={0}\n          pt={4}\n          borderTop={1}\n          borderColor={\"#E8E8E8\"}\n          justifyContent=\"space-between\"\n        >\n          <Button size={\"medium\"} mr={4} onClick={this.incrementCounter}>\n            Increase value\n          </Button>\n\n          <Button size={\"medium\"} onClick={this.decrementCounter}>\n            Decrease value\n          </Button>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default SmartContractControls;\n","import React from \"react\";\nimport { Card } from \"rimble-ui\";\nimport ConnectButton from \"./ConnectButton\";\nimport SmartContractControls from \"./SmartContractControls\";\n\nclass PrimaryCard extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        {!this.props.account ? (\n          <ConnectButton\n            initAccount={this.props.initAccount}\n            account={this.props.account}\n          />\n        ) : (\n          <SmartContractControls\n            contract={this.props.contract}\n            account={this.props.account}\n            initContract={this.props.initContract}\n            contractMethodSendWrapper={this.props.contractMethodSendWrapper}\n          />\n        )}\n      </Card>\n    );\n  }\n}\n\nexport default PrimaryCard;\n","import React from \"react\";\nimport Web3 from \"web3\"; // uses latest 1.x.x version\n\nconst RimbleTransactionContext = React.createContext({\n  contract: {},\n  account: {},\n  web3: {},\n  initWeb3: () => {},\n  initContract: () => {},\n  initAccount: () => {}\n});\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  // Initialize a web3 provider\n  initWeb3 = async () => {\n    let web3 = {};\n\n    // Check for modern web3 provider\n    if (window.ethereum) {\n      console.log(\"Using modern web3 provider.\");\n      web3 = new Web3(window.ethereum);\n    }\n    // Legacy dapp browsers, public wallet address always exposed\n    else if (window.web3) {\n      console.log(\"Legacy web3 provider. Try updating.\");\n      web3 = new Web3(window.web3.currentProvider);\n    }\n    // Non-dapp browsers...\n    else {\n      console.log(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n\n      web3 = false;\n    }\n\n    this.setState({ web3 });\n  };\n\n  initContract = async (address, abi) => {\n    console.log(\"creating contract\");\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = await new this.state.web3.eth.Contract(abi, address);\n      this.setState({ contract });\n    } catch (error) {\n      console.log(\"Could not create contract.\");\n      window.toastProvider.addMessage(\"Contract creation failed.\", {\n        variant: \"failure\"\n      });\n    }\n  };\n\n  initAccount = async () => {\n    try {\n      // Request account access if needed\n      await window.ethereum.enable().then(wallets => {\n        const account = wallets[0];\n        this.setState({ account });\n        console.log(\"wallet address:\", this.state.account);\n      });\n    } catch (error) {\n      // User denied account access...\n      console.log(\"error:\", error);\n      window.toastProvider.addMessage(\"User needs to CONNECT wallet\", {\n        variant: \"failure\"\n      });\n    }\n  };\n\n  contractMethodSendWrapper = contractMethod => {\n    let transaction = {};\n    transaction.created = Date.now();\n\n    // Show toast for starting transaction\n    console.log(\"Starting Transaction\");\n    transaction.status = \"started\";\n    this.showTransactionToast(transaction);\n\n    const { contract, account } = this.state;\n\n    try {\n      contract.methods[contractMethod]()\n        .send({ from: account })\n        .on(\"transactionHash\", hash => {\n          // Submitted to block and received transaction hash\n          console.log(\n            \"Transaction sent to block successfully. Result pending.\"\n          );\n          transaction.status = \"pending\";\n          this.showTransactionToast(transaction);\n        })\n        .on(\"confirmation\", (confirmationNumber, receipt) => {\n          console.log(\n            \"receipt: \",\n            receipt,\n            \"confirmation number: \",\n            confirmationNumber\n          );\n          // How many confirmations should be received before informing the user\n          const confidenceThreshold = 3;\n\n          if (confirmationNumber === 0) {\n            // Initial confirmation receipt\n            console.log(\"Transaction confirmed.\");\n            transaction.status = \"confirmed\";\n\n            this.showTransactionToast(transaction);\n          } else if (confirmationNumber < confidenceThreshold) {\n            console.log(\n              \"Confirmation \" +\n                confirmationNumber +\n                \". Threshold for confidence not met.\"\n            );\n            return;\n          } else if (confirmationNumber === confidenceThreshold - 1) {\n            // check the status from result\n            if (receipt.status === true) {\n              console.log(\"Transaction completed successfully!\");\n              transaction.status = \"success\";\n            } else if (receipt.status === false) {\n              console.log(\"Transaction reverted due to error.\");\n              transaction.status = \"error\";\n            }\n\n            this.showTransactionToast(transaction);\n            return;\n          } else if (confirmationNumber > confidenceThreshold) {\n            console.log(\n              \"Confirmation \" +\n                confirmationNumber +\n                \". Confidence threshold already met.\"\n            );\n            return;\n          }\n        })\n        .on(\"receipt\", receipt => {\n          // Received receipt\n          console.log(\"receipt: \", receipt);\n        })\n        .on(\"error\", error => {\n          // Errored out\n          console.log(error);\n          transaction.status = \"error\";\n          this.showTransactionToast(transaction);\n        });\n    } catch (error) {\n      console.log(\"Error calling method on smart contract.\");\n      transaction.status = \"error\";\n      this.showTransactionToast(transaction);\n    }\n  };\n\n  showTransactionToast = incomingTransaction => {\n    let transaction = {};\n    // Add extra info to transaction\n    transaction.lastUpdated = Date.now();\n    transaction = { ...transaction, ...incomingTransaction };\n\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n    let transactionHash = transaction.transactionHash;\n\n    switch (status) {\n      case \"started\":\n        transactionToastMeta = {\n          message: \"Value change submitted\",\n          secondaryMessage: \"Confirm in MetaMask\",\n          actionHref: \"\",\n          actionText: \"\",\n          variant: \"default\",\n          icon: \"InfoOutline\"\n        };\n        break;\n      case \"pending\":\n        transactionToastMeta = {\n          message: \"Verifying change\",\n          secondaryMessage: \"Sending change to the network\",\n          actionHref: \"\",\n          actionText: \"\",\n          variant: \"processing\"\n        };\n        break;\n      case \"confirmed\":\n        transactionToastMeta = {\n          message: \"Confirmed in MetaMask\",\n          secondaryMessage: \"This might take a few minutes\",\n          actionHref: \"https://rinkeby.etherscan.io/tx/\" + transactionHash,\n          actionText: \"Check progress\",\n          variant: \"processing\"\n        };\n        break;\n      case \"success\":\n        transactionToastMeta = {\n          message: \"Smart contract value changed\",\n          variant: \"success\"\n        };\n        break;\n      case \"error\":\n        transactionToastMeta = {\n          message: \"Value change failed\",\n          secondarymessage:\n            \"Make sure you have enough Ether (ETH) and try again\",\n          actionHref: \"https://rinkeby.etherscan.io/tx/\" + transactionHash,\n          actionText: \"View on Etherscan\",\n          variant: \"failure\"\n        };\n        break;\n      default:\n        break;\n    }\n    return transactionToastMeta;\n  };\n\n  state = {\n    contract: {},\n    account: null,\n    web3: null,\n    initWeb3: this.initWeb3,\n    initContract: this.initContract,\n    initAccount: this.initAccount,\n    contractMethodSendWrapper: this.contractMethodSendWrapper\n  };\n\n  componentDidMount() {\n    this.initWeb3();\n  }\n\n  render() {\n    return (\n      <RimbleTransactionContext.Provider value={this.state} {...this.props} />\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport { Box, Heading, Text } from \"rimble-ui\";\n\nclass InstructionsCard extends React.Component {\n  render() {\n    return (\n\n      <Box width={\"600px\"} mx=\"auto\" mt={4}>\n        <Heading.h3>Instructions:</Heading.h3>\n        <ol>\n          <li><Text p={1}>Make sure MetaMask is working in your browser</Text></li>\n          <li><Text p={1}>Set the network to Rinkeby Test Network</Text></li>\n          <li><Text p={1}>You'll need a little bit of ETH for gas fees</Text></li>\n        </ol>\n      </Box>\n    );\n  }\n}\n\nexport default InstructionsCard;\n","import React from \"react\";\nimport { Card, Heading, Text, Link } from \"rimble-ui\"\n\nclass MissingWeb3Provider extends React.Component {\n    render() {\n        return(\n            <Card width={\"600px\"} mx={\"auto\"} px={4}>\n                <Heading.h2>No Web3 Provider Available</Heading.h2>\n\n                <Text>You will need to <Link href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\" target=\"_blank\">install MetaMask</Link> to use this dApp.</Text>\n            </Card>\n        )\n    }\n}\n\nexport default MissingWeb3Provider\n","// theme.js\nexport default {\n  fontSizes: [\n    12, 14, 16, 20, 24, 32, 48, 64\n  ],\n  fontWeights: [\n    0, 300, 400, 600, 700\n  ],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: 'athelas, georgia, times, serif',\n    sansSerif: '\"Source Sans Pro\", -apple-system, sans-serif',\n  },\n  space: [\n    0, 4, 8, 16, 32, 64, 128, 256\n  ],\n  radii: [\n    '0', '4px', '8px', '16px'\n  ],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [\n    0,\n    '1px solid'\n  ],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)'\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: '#4E3FCE',\n    blue: '#007ce0',\n    navy: '#004175',\n    copyColor: '#3F3D4B',\n    // black: '#000',\n    black: '#000e1a',\n      'near-black': '#111',\n      'dark-gray': '#333',\n      'mid-gray': '#555',\n    // gray: ' #777',\n    grey: '#CCC',\n    silver: '#999',\n      'light-silver': '#aaa',\n      'moon-gray': '#ccc',\n      'light-gray': '#eee',\n      'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ]\n  }\n}\n","import React, { Component } from \"react\";\nimport { ThemeProvider, Box, ToastMessage, Text, Flex } from \"rimble-ui\";\nimport Header from \"./components/Header\";\nimport PrimaryCard from \"./components/PrimaryCard\";\nimport RimbleWeb3 from \"./components/RimbleWeb3\";\nimport InstructionsCard from \"./components/InstructionsCard\";\nimport MissingWeb3Provider from \"./components/MissingWeb3Provider\";\nimport theme from \"./theme\";\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  body, html {\n    margin: 0;\n    padding: 0;\n    background-color: #efefef;\n  }\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme} className=\"App\">\n        <Header />\n        <Flex justifyContent=\"center\" p={4}>\n          <Text width=\"600px\">\n            This is a starter React dApp that uses the Rimble UI component\n            library to call methods on a smart contract deployed to the Ethereum\n            Rinkeby testnet.\n          </Text>\n        </Flex>\n\n        <RimbleWeb3>\n          <RimbleWeb3.Consumer>\n            {({\n              web3,\n              contract,\n              account,\n              initContract,\n              initAccount,\n              contractMethodSendWrapper\n            }) => (\n              <Box>\n                {/* Conditionally render child comonents dependent on web3 being loaded */}\n                {!web3 ? (\n                  <MissingWeb3Provider />\n                ) : (\n                  <PrimaryCard\n                    contract={contract}\n                    account={account}\n                    initContract={initContract}\n                    initAccount={initAccount}\n                    contractMethodSendWrapper={contractMethodSendWrapper}\n                  />\n                )}\n              </Box>\n            )}\n          </RimbleWeb3.Consumer>\n        </RimbleWeb3>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n        <InstructionsCard />\n        <GlobalStyle />\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}